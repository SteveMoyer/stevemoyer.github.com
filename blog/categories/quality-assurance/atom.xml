<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: quality assurance | Coding Libetartian]]></title>
  <link href="http://blog.stevemoyer.net/blog/categories/quality-assurance/atom.xml" rel="self"/>
  <link href="http://blog.stevemoyer.net/"/>
  <updated>2013-03-14T11:53:41-07:00</updated>
  <id>http://blog.stevemoyer.net/</id>
  <author>
    <name><![CDATA[Steve Moyer]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[My QA Value Proposition]]></title>
    <link href="http://blog.stevemoyer.net/2010/04/06/my-qa-value-proposition.html"/>
    <updated>2010-04-06T00:13:00-07:00</updated>
    <id>http://blog.stevemoyer.net/2010/04/06/my-qa-value-proposition</id>
    <content type="html"><![CDATA[<div class='post'>
I've heard and observed that Quality Analysts/ Quality Engineer's(QA for the purposes of this post) are often valued a lot less than other members of software development teams.  Here are some of the reasons I've heard in support of this view:<br/>

<ul><li>Following a script and clicking through a website is easy, anyone can do it.
</li><li>We test so we don't need someone else to do it.</li><li>They never find any real bugs.</li><li>We'd rather just have another developer.
</li></ul>
<br/>
I don't agree with the perspective so I thought I'd lay out what I think the QA value proposition is.<br/><br/>

While the entire team must take ownership of the quality of application, the QA's are the shepherds of that quality.  If you are simply tossing an untested application over the wall at QA, they will be scrambling(usually ineffectively) to clean up your mess.  To be effective, QA's should be full fledged members of your team, co-located with your team, testing in-phase with your team.<br/><br/>

While QA's perform a good amount of manual testing they also help create smoke tests, help determine acceptance criteria, help write acceptance tests, and monitor performance testing.
<br/><br/>
While QA's may follow some test scripts, they also monitor browser compatibility, find creative ways to break the application, and have keen attention to detail.  They are also able to step back and notice things that escape your eye after viewing the functionality in your story for the thousandth time that day.
<br/><br/>
Good QA's help expose defects, find work-arounds, and help the business to prioritize them.  They monitor, minimize, and mitigate the differences between other environments and production.
<br/><br/>
While it's certainly possibly to successfully develop quality applications without formal "QA", having good QA's around makes it much easier.  I think they are every bit as valuable as other members of the team.
<br/><br/>
When people don't see much value in QA's, I generally think they haven't worked with a good QA or have only worked in environments which make all but the most basic QA work impossible (i.e. "After 6 months, here is our first testable release. We have to be in production in a week.  Good luck.").
<br/><br/>
I'm sure I've left out many other things.  How else do QA's provide value to projects?</div>



]]></content>
  </entry>
  
</feed>
